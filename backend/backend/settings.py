"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""


import os
from pathlib import Path
from datetime import timedelta


from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4d3kde!!&dy9ehyn13u00y$v*cg1+=f$7k3*)rnc1-0=2y0)as'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['jemsa.co.ke','www.jemsa.co.ke','api.jemsa.co.ke','www.api.jemsa.co.ke']
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'django_filters',
    'corsheaders',
    'api',
    'mpesaconfig',
    'django_daraja',
    # Remove 'django_redis' from here
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'api.middleware.CheckoutMiddleware',
    
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',  # Changed from IsAuthenticated
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 12,
}

# JWT settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=24),  # Changed from 30 minutes to 24 hours
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),   # Changed from 1 day to 7 days
    'ROTATE_REFRESH_TOKENS': True,                 # Enable refresh token rotation
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'JTI_CLAIM': 'jti',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'TOKEN_OBTAIN_SERIALIZER': 'rest_framework_simplejwt.serializers.TokenObtainPairSerializer',
    'TOKEN_REFRESH_SERIALIZER': 'rest_framework_simplejwt.serializers.TokenRefreshSerializer',
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(hours=24),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=7),
}

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Add this line
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.sqlite3',
       'NAME': BASE_DIR / 'db.sqlite3',
   }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'dablvqsi_jemsadb001',
#         'USER': 'dablvqsi_db001jemsa',
#         'PASSWORD': 'db001Jemsa#',
#         'HOST': 'localhost',
#         'PORT': '3306',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True 

CORS_ALLOWED_ORIGINS = [
    # "https://jemsa.co.ke",
    # "https://www.jemsa.co.ke",
    "http://localhost:5173",  
    
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = int(os.getenv('EMAIL_PORT'))
EMAIL_USE_TLS = True  # Hard-code this to True since we're using port 587
EMAIL_USE_SSL = False  # Hard-code this to False since we're using TLS
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
EMAIL_SUBJECT_PREFIX = '[Jemsa Techs
# Enhanced email logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'django.mail': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        }
    }
}

# OTP settings
SEND_OTP_VIA_EMAIL = os.getenv('SEND_OTP_VIA_EMAIL', True)  # Set this to True to send OTPs via email

AUTH_USER_MODEL = 'api.CustomUser'


# M-Pesa API Configurations
# For security reasons, it's best to use environment variables
# You can use python-decouple or django-environ to manage these
# M-Pesa API configurations using environment variables
MPESA_CONFIG = {
    'MPESA_ENVIRONMENT': os.getenv('MPESA_ENVIRONMENT', 'sandbox'),
    'MPESA_CONSUMER_KEY': os.getenv('MPESA_CONSUMER_KEY'),
    'MPESA_CONSUMER_SECRET': os.getenv('MPESA_CONSUMER_SECRET'),
    'MPESA_SHORTCODE': os.getenv('MPESA_SHORTCODE'),
    'MPESA_EXPRESS_SHORTCODE': os.getenv('MPESA_EXPRESS_SHORTCODE'),
    'MPESA_PASSKEY': os.getenv('MPESA_PASSKEY'),
    'MPESA_SHORTCODE_TYPE': os.getenv('MPESA_SHORTCODE_TYPE', 'paybill'),

    # Callback URLs
    'MPESA_CALLBACK_BASE_URL': os.getenv('MPESA_CALLBACK_BASE_URL'),
    'MPESA_C2B_CONFIRMATION_URL': f"{os.getenv('MPESA_CALLBACK_BASE_URL')}/api/mpesa/c2b-confirmation/",
    'MPESA_C2B_VALIDATION_URL': f"{os.getenv('MPESA_CALLBACK_BASE_URL')}/api/mpesa/c2b-validation/",
    'MPESA_STK_PUSH_CALLBACK_URL': f"{os.getenv('MPESA_CALLBACK_BASE_URL')}/api/mpesa/stk-push-callback/",
}

# Remove the CACHES configuration
# Delete this entire block
# CACHES = {
#     'default': {
#         'BACKEND': 'django_redis.cache.RedisCache',
#         'LOCATION': 'redis://127.0.0.1:6379/1',
#         'OPTIONS': {
#             'CLIENT_CLASS': 'django_redis.client.DefaultClient',
#             'MAX_ENTRIES': 1000000,
#         }
#     }
# }


# Set the cookie age (in seconds) - 2 weeks default
SESSION_COOKIE_AGE = 1209600  # 2 weeks in seconds
# Session settings
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

SESSION_SAVE_EVERY_REQUEST = True
# Update session configuration
# Cookie settings
SESSION_COOKIE_SECURE = True  # Only send cookies over HTTPS
CSRF_COOKIE_SECURE = True  # Only send CSRF cookie over HTTPS
SESSION_COOKIE_HTTPONLY = True  # Prevent JavaScript access to session cookie
CSRF_COOKIE_HTTPONLY = True  # Prevent JavaScript access to CSRF cookie
SESSION_COOKIE_SAMESITE = 'Lax'  # Controls whether cookies are sent with cross-site requests
CSRF_COOKIE_SAMESITE = 'Lax'  # Same as above for CSRF cookies

# Add these new settings
CSRF_TRUSTED_ORIGINS = [
    # 'https://jemsa.co.ke',
    # 'https://www.jemsa.co.ke',
    'http://localhost:5173',
    # Add your production domains here
]

# Update CORS settings
CORS_ALLOW_CREDENTIALS = True
CORS_EXPOSE_HEADERS = ['Content-Type', 'X-CSRFToken']

# If your site needs to embed resources from other domains or be embedded itself
# you might need to adjust these settings:
# SESSION_COOKIE_SAMESITE = 'None'  # Required for cross-origin requests
# CSRF_COOKIE_SAMESITE = 'None'  # Required for cross-origin requests


# If you need to support development environments
if DEBUG:
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False
    ALLOWED_HOSTS += ['localhost', '127.0.0.1']
    CORS_ALLOWED_ORIGINS += [
        "http://localhost:5173",
        "http://127.0.0.1:5173",
    ]

# Add database indexing for better session query performance
SESSION_DB_ALIAS = 'default'

# Security settings for large-scale deployment
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

#crontab -e
#/usr/local/bin/python3 /home/username/path_to_your_project/manage.py cleanup_sessions
#0 */12 * * * /usr/local/bin/python3 /home/username/path_to_your_project/manage.py cleanup_sessions >> /home/username/logs/session_cleanup.log 2>&1
# Run every hour
#0 * * * * /path/to/your/python /path/to/your/manage.py cleanup_guest_carts

# Run cleanup every day at 3 AM
#0 3 * * * /path/to/your/virtual/env/python /path/to/your/manage.py cleanup_guest_wishlists
